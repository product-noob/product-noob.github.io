name: Build and Deploy with API Keys

# Trigger the workflow on push to master or manual dispatch
on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Environment variables used throughout the workflow
env:
  JEKYLL_ENV: production

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install Dependencies
        run: bundle install

      - name: Create API Configuration
        shell: bash
        run: |
          echo "// This file is auto-generated during build - do not edit manually" > assets/js/api-config.js
          echo "const API_KEYS = {" >> assets/js/api-config.js
          echo "  openai: \"${{ secrets.OPENAI_API_KEY }}\"," >> assets/js/api-config.js
          echo "  groq: \"${{ secrets.GROQ_API_KEY }}\"," >> assets/js/api-config.js
          echo "  google: \"${{ secrets.GOOGLE_API_KEY }}\"" >> assets/js/api-config.js
          echo "};" >> assets/js/api-config.js
          echo "" >> assets/js/api-config.js
          echo "// Export API keys for use in other modules" >> assets/js/api-config.js
          echo "if (typeof exports !== 'undefined') {" >> assets/js/api-config.js
          echo "  exports.API_KEYS = API_KEYS;" >> assets/js/api-config.js
          echo "}" >> assets/js/api-config.js

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build Site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v2
